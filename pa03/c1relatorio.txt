1. Analise o código e tente identificar eventuais erros: 
há um problema ao alocar memoria e loop percorrer um tamanho ao que foi alocado

2. Utilizando as ferramentas, confirme a sua avaliação ou identifique problemas.
==40== Memcheck, a memory error detector
==40== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==40== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==40== Command: ./c1.out
==40==
==40== error calling PR_SET_PTRACER, vgdb might block
==40== Invalid write of size 4
==40==    at 0x1091B8: main (c1.c:9)
==40==  Address 0x4a8b068 is 0 bytes after a block of size 40 alloc'd
==40==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==40==    by 0x109185: main (c1.c:6)
==40==
==40==
==40== HEAP SUMMARY:
==40==     in use at exit: 0 bytes in 0 blocks
==40==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==40==
==40== All heap blocks were freed -- no leaks are possible
==40==
==40== For lists of detected and suppressed errors, rerun with: -s
==40== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

3. Corrija o código, removendo o(s) erro(s) identificado(s).
corrigi o erro mudando o loop para atender a forma que foi alocado a memoria no codigo

4. Utilizando novamente as ferramentas, verifique a remoção do erro.
==47== Memcheck, a memory error detector
==47== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==47== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==47== Command: ./c1c.out
==47==
==47== error calling PR_SET_PTRACER, vgdb might block
==47==
==47== HEAP SUMMARY:
==47==     in use at exit: 0 bytes in 0 blocks
==47==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==47==
==47== All heap blocks were freed -- no leaks are possible
==47==
==47== For lists of detected and suppressed errors, rerun with: -s
==47== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)