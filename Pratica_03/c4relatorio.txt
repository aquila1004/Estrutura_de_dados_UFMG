1. Analise o código e tente identificar eventuais erros.
possui alguns problemas que causam erros de acesso inválido à memória

2. Utilizando as ferramentas, confirme a sua avaliação ou identifique problemas.
==78== Memcheck, a memory error detector
==78== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78== Command: ./c4.out
==78==
==78== error calling PR_SET_PTRACER, vgdb might block
==78== Use of uninitialised value of size 8
==78==    at 0x10917A: main (c4.c:14)
==78==
==78== Invalid write of size 4
==78==    at 0x10917A: main (c4.c:14)
==78==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==78==
==78==
==78== Process terminating with default action of signal 11 (SIGSEGV)
==78==  Access not within mapped region at address 0x0
==78==    at 0x10917A: main (c4.c:14)
==78==  If you believe this happened as a result of a stack
==78==  overflow in your program's main thread (unlikely but
==78==  possible), you can try to increase the size of the
==78==  main thread stack using the --main-stacksize= flag.
==78==  The main thread stack size used in this run was 8388608.
==78==
==78== HEAP SUMMARY:
==78==     in use at exit: 0 bytes in 0 blocks
==78==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==78==
==78== All heap blocks were freed -- no leaks are possible
==78==
==78== Use --track-origins=yes to see where uninitialised values come from
==78== For lists of detected and suppressed errors, rerun with: -s
==78== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)

3. Corrija o código, removendo o(s) erro(s) identificado(s).
Alocação de memória para a variável rotation3D usando malloc.
Alocação de memória para a matriz data corretamente, incluindo a alocação para cada linha.
Preenchimento da matriz data com valores (apenas como exemplo).
Liberação da memória alocada para a matriz data e a struct Matrix.

4. Utilizando novamente as ferramentas, verifique a remoção do erro.

==84== Memcheck, a memory error detector
==84== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==84== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==84== Command: ./c4c.out
==84==
==84== error calling PR_SET_PTRACER, vgdb might block
==84==
==84== HEAP SUMMARY:
==84==     in use at exit: 0 bytes in 0 blocks
==84==   total heap usage: 6 allocs, 6 frees, 112 bytes allocated
==84==
==84== All heap blocks were freed -- no leaks are possible
==84==
==84== For lists of detected and suppressed errors, rerun with: -s
==84== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)