1. Analise o código e tente identificar eventuais erros.
o codigo esta tentando acessar memoria fora dos limites do array

2. Utilizando as ferramentas, confirme a sua avaliação ou identifique problemas.
==114== Memcheck, a memory error detector
==114== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==114== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==114== Command: ./c7.out
==114==
==114== error calling PR_SET_PTRACER, vgdb might block
==114== Invalid write of size 1
==114==    at 0x1091BC: main (c7.c:10)
==114==  Address 0x4a8b05a is 0 bytes after a block of size 26 alloc'd
==114==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==114==    by 0x109183: main (c7.c:5)
==114==
==114==
==114== HEAP SUMMARY:
==114==     in use at exit: 0 bytes in 0 blocks
==114==   total heap usage: 1 allocs, 1 frees, 26 bytes allocated
==114==
==114== All heap blocks were freed -- no leaks are possible
==114==
==114== For lists of detected and suppressed errors, rerun with: -s
==114== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

3. Corrija o código, removendo o(s) erro(s) identificado(s).
a correcao é colocando o limite certo para ele acessar a memoria sem superar o tamanho da string *(alphabet + 25) = '\0'; 

4. Utilizando novamente as ferramentas, verifique a remoção do erro.
==120== Memcheck, a memory error detector
==120== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==120== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==120== Command: ./c7c.out
==120==
==120== error calling PR_SET_PTRACER, vgdb might block
==120==
==120== HEAP SUMMARY:
==120==     in use at exit: 0 bytes in 0 blocks
==120==   total heap usage: 1 allocs, 1 frees, 26 bytes allocated
==120==
==120== All heap blocks were freed -- no leaks are possible
==120==
==120== For lists of detected and suppressed errors, rerun with: -s
==120== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)