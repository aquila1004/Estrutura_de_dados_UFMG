1. Analise o código e tente identificar eventuais erros.
o problema esta no for que faz a distribuicao dos valores para o vetor [a]

2. Utilizando as ferramentas, confirme a sua avaliação ou identifique problemas.
==53== Memcheck, a memory error detector
==53== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==53== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==53== Command: ./c2.out
==53==
==53== error calling PR_SET_PTRACER, vgdb might block
==53== Conditional jump or move depends on uninitialised value(s)
==53==    at 0x48D6B56: __vfprintf_internal (vfprintf-internal.c:1516)
==53==    by 0x48C081E: printf (printf.c:33)
==53==    by 0x1091F1: main (c2.c:11)
==53==
==53== Use of uninitialised value of size 8
==53==    at 0x48BA33B: _itoa_word (_itoa.c:177)
==53==    by 0x48D5B3D: __vfprintf_internal (vfprintf-internal.c:1516)
==53==    by 0x48C081E: printf (printf.c:33)
==53==    by 0x1091F1: main (c2.c:11)
==53==
==53== Conditional jump or move depends on uninitialised value(s)
==53==    at 0x48BA34C: _itoa_word (_itoa.c:177)
==53==    by 0x48D5B3D: __vfprintf_internal (vfprintf-internal.c:1516)
==53==    by 0x48C081E: printf (printf.c:33)
==53==    by 0x1091F1: main (c2.c:11)
==53==
==53== Conditional jump or move depends on uninitialised value(s)
==53==    at 0x48D6643: __vfprintf_internal (vfprintf-internal.c:1516)
==53==    by 0x48C081E: printf (printf.c:33)
==53==    by 0x1091F1: main (c2.c:11)
==53==
==53== Conditional jump or move depends on uninitialised value(s)
==53==    at 0x48D5C85: __vfprintf_internal (vfprintf-internal.c:1516)
==53==    by 0x48C081E: printf (printf.c:33)
==53==    by 0x1091F1: main (c2.c:11)
==53==
0 1 2 3 4 5 6 7 8 0
==53==
==53== HEAP SUMMARY:
==53==     in use at exit: 0 bytes in 0 blocks
==53==   total heap usage: 1 allocs, 1 frees, 512 bytes allocated
==53==
==53== All heap blocks were freed -- no leaks are possible
==53==
==53== Use --track-origins=yes to see where uninitialised values come from
==53== For lists of detected and suppressed errors, rerun with: -s
==53== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)

3. Corrija o código, removendo o(s) erro(s) identificado(s).
correcao no for para valores de 0 a 9

4. Utilizando novamente as ferramentas, verifique a remoção do erro.
==59== Memcheck, a memory error detector
==59== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59== Command: ./c2c.out
==59==
==59== error calling PR_SET_PTRACER, vgdb might block
0 1 2 3 4 5 6 7 8 9
==59==
==59== HEAP SUMMARY:
==59==     in use at exit: 0 bytes in 0 blocks
==59==   total heap usage: 1 allocs, 1 frees, 512 bytes allocated
==59==
==59== All heap blocks were freed -- no leaks are possible
==59==
==59== For lists of detected and suppressed errors, rerun with: -s
==59== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)